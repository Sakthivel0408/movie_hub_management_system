/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.movie_hub;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author asakt
 */
public class InsertForm3 extends javax.swing.JFrame {

    /**
     * Creates new form InsertForm3
     * @throws java.sql.SQLException
     */
    public InsertForm3() throws SQLException{
        this.PASS = "Sakthi0408";
        this.USER = "sakthivel";
        this.DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
        this.conn = DriverManager.getConnection(this.DB_URL,this.USER, this.PASS);
        initComponents();
    }
    public InsertForm3(int i) throws SQLException {
        this.PASS = "Sakthi0408";
        this.USER = "sakthivel";
        this.DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
        this.conn = DriverManager.getConnection(this.DB_URL, this.USER, this.PASS);
        ind=i;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insertButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        awardNameText = new javax.swing.JTextField();
        awardYearText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Enter Award Details");

        insertButton.setBackground(new java.awt.Color(204, 204, 0));
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(255, 0, 51));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 16)); // NOI18N
        jLabel1.setText("Enter Award Name:");

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 16)); // NOI18N
        jLabel2.setText("Year:");

        awardNameText.setText("awardname");

        awardYearText.setText("year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(awardYearText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(awardNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(awardNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(awardYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed

        // TODO add your handling code here:
        // Retrieve values from the form
    Movie_hub.awardNameI = awardNameText.getText();
    Movie_hub.awardYearI = awardYearText.getText();
    String awardIdI = "aw0" + getAwardId();
    System.out.println("OK1");
    String actorIdI = getActorId(Movie_hub.roleIdI, Movie_hub.movieIdI);
    System.out.println("OK2");

    // Prepare the query for the stored procedure
    String insertQuery = "{call add_award(?, ?, ?, ?, ?)}";
    System.out.println(insertQuery);

    // Execute the insert query
    int r = insertAward(insertQuery, awardIdI, Movie_hub.awardNameI, Integer.parseInt(Movie_hub.awardYearI), actorIdI, Movie_hub.roleIdI);
    if (r > 0) {
        JOptionPane.showMessageDialog(null, "Award inserted successfully!");
        Form1.displayButton.doClick();
    } else {
        JOptionPane.showMessageDialog(null, "No rows inserted.", "Insert Error", JOptionPane.ERROR_MESSAGE);
    }
    this.dispose();
        
    }//GEN-LAST:event_insertButtonActionPerformed
//insertQuery="INSERT INTO AWARD VALUES('aw0"+awardIdI+"', '"+Movie_hub.awardNameI+"', '"+Movie_hub.awardYearI+"', '"+actorIdI+"', '"+Movie_hub.roleIdI+"')";
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new InsertForm2(ind).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InsertForm3().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(InsertForm3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private int insertAward(String query, String awardIdI, String awardNameI, int awardYearI, String actorIdI, String roleIdI) {
    //String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
    //String USER = "sakthivel";
    //String PASS = "Sakthi0408";
    int rowsAffected = 0;

    CallableStatement cstmt = null;
    //System.out.println("OK3");
    try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        //conn = DriverManager.getConnection(DB_URL, USER, PASS);

        // Create CallableStatement
        cstmt = conn.prepareCall(query);
        cstmt.setString(1, awardIdI);
        cstmt.setString(2, awardNameI);
        cstmt.setInt(3, awardYearI);
        cstmt.setString(4, actorIdI);
        cstmt.setString(5, roleIdI);
        System.out.println("OK4");

        // Execute the stored procedure
        rowsAffected = cstmt.executeUpdate();
        System.out.println("OK5");

    } catch (SQLException | ClassNotFoundException se) {
        se.printStackTrace();
    } finally {
        try {
            if (cstmt != null) cstmt.close();
        } catch (SQLException se2) {
            se2.printStackTrace();
        }
        try {
            if (conn != null) conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }
    return rowsAffected;
}
    private Integer getAwardId() {
        String awardId = null;
        String query = "SELECT SUBSTR(MAX(award_id), 3) FROM award";
        
        //String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
        //String USER = "sakthivel";
        //String PASS = "Sakthi0408";
        try (PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) {

            if (rs.next()) {
                awardId = rs.getString(1);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return Integer.parseInt(awardId)+1;
    }
    private String getActorId(String rid,String mid)
    {
        String actorId=null;
        String query="SELECT ACTOR_ID FROM ROLES WHERE ROLE_ID='"+rid+"' AND MOVIE_ID='"+mid+"'";
        //String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
        //String USER = "sakthivel";
        //String PASS = "Sakthi0408";
        try (PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) {

            if (rs.next()) {
                actorId = rs.getString(1);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return actorId;
    }
    private int ind;
    private String insertQuery;
    private String DB_URL;
    private String USER;
    private String PASS;
    private Connection conn;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField awardNameText;
    private javax.swing.JTextField awardYearText;
    private javax.swing.JButton backButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
